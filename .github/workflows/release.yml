# This is a basic workflow to help you get started with Actions
# https://gist.github.com/wilsontwm/28beb84b0bad67d03c8c2bff18a75188


name: Make Release


# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
    inputs:
      tags:
        description: 'Test scenario tags'
  release:
    types: [created]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  linting:
    name: Run the linter
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
    # Setup Go
    - name: Setup Go
      uses: actions/setup-go@v2.1.3
      with:
        stable: 'false'
        go-version: '1.16.0-rc1' # The Go version to download (if necessary) and use.

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v2
      with:
        version: v1.35.2
        args: --skip-files pion.go

  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, windows/386, windows/amd64, darwin/386, darwin/amd64 
        goos: [linux, windows, darwin]
        goarch: [amd64]
    steps:
    - uses: actions/checkout@v2
    - uses: wangyoucao577/go-release-action@v1.14
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
 #      goversion: "https://dl.google.com/go/go1.15.6.linux-amd64.tar.gz"
        goversion: "https://golang.org/dl/go1.16beta1.linux-amd64.tar.gz"
        project_path: "."
        binary_name: "sfu-x186k"
        extra_files: LICENSE README.md







  docker-build-push:
#    if: false
    name: docker build and push
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: x186k/sfu-x186k # list of Docker images to use as base name for tags
          tag-sha: true # add git short SHA as Docker tag

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,windows/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
