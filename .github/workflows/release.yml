# This is a basic workflow to help you get started with Actions
# https://gist.github.com/wilsontwm/28beb84b0bad67d03c8c2bff18a75188


name: Make Release


# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
  release:
    types: [created]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  linting:
    name: Run the linter
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '^1.16.5' # The Go version to download (if necessary) and use.
    - run: go version

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v2
      with:
    #    version: v2.5.2
        skip-go-installation: true
        args: --skip-files pion.go

  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, windows/386, windows/amd64, darwin/386, darwin/amd64 
        goos: [linux, windows, darwin]
        goarch: [amd64]
    steps:
    - uses: actions/checkout@v2
    - uses: wangyoucao577/go-release-action@v1.18
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
 #      goversion: "https://dl.google.com/go/go1.15.6.linux-amd64.tar.gz"
        goversion: "1.16.5"
        project_path: "."
        binary_name: "sfu1"
        extra_files: LICENSE README.md
        release_tag: ""
# default is ${BINARY_NAME}-${RELEASE_TAG}-${GOOS}-${GOARCH}
# but my version allows direct downloads using:
# https://github.com/x186k/sfu1/releases/latest/download/sfu1-linux-amd64.tar.gz
# https://github.com/x186k/sfu1/releases/latest/download/sfu1-windows-amd64.tar.gz
# etc
        asset_name: sfu1-${{ matrix.goos }}-${{ matrix.goarch }}







  docker-build-push:
#    if: false
    name: docker build and push
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1.11.0
        with:
          images: x186k/sfu1 # list of Docker images to use as base name for tags
          tag-sha: true # add git short SHA as Docker tag

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1.0.1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.1.1

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1.8.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2.2.2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
